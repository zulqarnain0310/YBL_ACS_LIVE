SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO



create PROCEDURE [pro].[CURDATACDAILYTXNDETAIL_INSERT_A]
AS
BEGIN
   BEGIN TRY
        
	DECLARE @PROCESSDATE DATE =(SELECT CAST(STARTDATE AS DATE) FROM PRO.EXTDATE_MISDB WHERE FLG='Y')
	DECLARE @TIMEKEY INT=(SELECT TIMEKEY FROM SYSDAYMATRIX WHERE CAST(DATE AS DATE)= @PROCESSDATE)
	DECLARE @SETID INT =(SELECT ISNULL(MAX(ISNULL(SETID,0)),0)+1 FROM [PRO].[PROCESSMONITOR] WHERE TIMEKEY=@TIMEKEY)

/* 190720236 - AMAR COMMENTED BELOW CODE AND ADDED NEW FOR OPTIMISATION */
/*
--IF EXISTS(SELECT 1 FROM Pro.ProcessingTableStatus WHERE CurrentTimekey=@TIMEKEY and TableName='ACDAILYTXNDETAIL')
-- BEGIN
--	DELETE FROM dbo.ACDAILYTXNDETAIL WHERE EXTDATE=@PROCESSDATE
--	DELETE  FROM  [PRO].[ProcessingTableStatus] WHERE CurrentTimekey=@TIMEKEY AND TableName='ACDAILYTXNDETAIL'
-- END */

DECLARE @DataBase varchar(10)='YBL_ACS_'
DECLARE @Year varchar(10) = (SELECT left(EndDate,4) 
FROM PRO.EXTDATE_MISDB WHERE FLG = 'Y' ) 
DECLARE @TableName varchar(50)='.dbo.AcDailyTxnDetail' 
DECLARE @Month varchar(10) = (SELECT LEFT(datename(MM,StartDate),3)FROM PRO.EXTDATE_MISDB a 
WHERE FLG = 'Y' )
DECLARE @DerivedTable VARCHAR(100) =@DataBase+''+@Year+''+''+@TableName+''+@Year+'_'+@Month 
SELECT @DerivedTable
SELECT @DerivedTable

Declare @InsertSQL Varchar(Max),@DeleteSQL Varchar(Max)

 IF EXISTS(SELECT 1 FROM Pro.ProcessingTableStatus WHERE CurrentTimekey=@TIMEKEY and TableName='ACDAILYTXNDETAIL')
 BEGIN
	   SET @DeleteSQL='DELETE  FROM  '+@DerivedTable+ ' WHERE EXTDATE=@PROCESSDATE'
	   EXEC (@DeleteSQL)
	   DELETE  FROM  [PRO].[ProcessingTableStatus] WHERE CurrentTimekey=@TIMEKEY AND TableName='ACDAILYTXNDETAIL'
 END

	---change logic as per discussion on 06/02/2020 some code missing triloki khanna reference of code 1854---
		-- IF OBJECT_ID('TEMPDB..#TempTableCod_txn_mnemonic') is not  null 
		--   DROP TABLE #TempTableCod_txn_mnemonic

		--SELECT   Cod_txn_mnemonic
		--INTO #TempTableCod_txn_mnemonic 
		--FROM YBL_ACS_MIS.[dbo].ODS_FCR_CH_NOBOOK_CURR
		--EXCEPT 
		--SELECT Cod_txn_mnemonic from YBL_ACS_MIS.[dbo].ODS_FCR_BA_TXN_MNEMONIC

		--ALTER TABLE #TempTableCod_txn_mnemonic ADD NEW_TXN_CODE  varchar (20)
				

		--UPDATE A SET A.NEW_TXN_CODE=B.NEW_TXN_CODE 
		--FROM #TempTableCod_txn_mnemonic A
		--INNER JOIN YBL_ACS_MIS.[dbo].ODS_FCR_TRANSACTION_CODE_DECODE B 
		--ON A.Cod_txn_mnemonic=B.OLD_TXN_CODE
		---change logic as per discussion on 06/02/2020 some code missing triloki khanna reference of code 1854---

		---change logic as per discussion on 06/02/2020 some code missing triloki khanna reference of code 1854----

       INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'Work for AcDailyTxnDetail COD_TXN_MNEMONIC','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID

	UPDATE A SET   COD_TXN_MNEMONIC=B.NEW_TXN_CODE
	FROM  YBL_ACS_MIS.[DBO].ODS_FCR_CH_NOBOOK_CURR A
	INNER JOIN YBL_ACS_MIS.[DBO].ODS_FCR_TRANSACTION_CODE_DECODE B   
		ON A.COD_TXN_MNEMONIC=B.OLD_TXN_CODE

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='Work for AcDailyTxnDetail COD_TXN_MNEMONIC'


INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'Insert Data Into Temp ACDAILYTXNDETAIL','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID
	
   
	 IF OBJECT_ID('TEMPDB..#TempAcDailyTxnDetail') is not  null 
 DROP TABLE #TempAcDailyTxnDetail
CREATE TABLE [#TempAcDailyTxnDetail](
	[Entitykey] [bigint] IDENTITY(1,1) NOT NULL,
	[CustomerID] [varchar](20) NULL,
	[CustomerAcID] [varchar](20) NULL,
	[TxnDate] [date] NULL,
	[TxnType] [varchar](10) NULL,
	[TxnSubType] [varchar](20) NULL,
	[TxnTime] [varchar](20) SPARSE  NULL,
	[CurrencyAlt_Key] [int] NULL,
	[CurrencyConvRate] [decimal](10, 5) NULL,
	[TxnAmount] [decimal](16, 2) NULL,
	[TxnAmountInCurrency] [decimal](16, 2) NULL,
	[ExtDate] [date] SPARSE  NULL,
	[TxnRefNo] [varchar](50) NULL,
	[TxnValueDate] [date] NULL,
	[MnemonicCode] [varchar](20) NULL,
	[Particular] [varchar](500) SPARSE  NULL,
	[AuthorisationStatus] [varchar](2) SPARSE  NULL,
	[CreatedBy] [varchar](20) NULL,
	[DateCreated] [smalldatetime] NULL,
	[ModifiedBy] [varchar](20) SPARSE  NULL,
	[DateModified] [smalldatetime] SPARSE  NULL,
	[ApprovedBy] [varchar](20) SPARSE  NULL,
	[DateApproved] [smalldatetime] SPARSE  NULL,
	[D2Ktimestamp] [timestamp] NOT NULL,
	[Remark] [varchar](1000) SPARSE  NULL,
	[TrueCredit] [char](1) NULL,
	[IsProcessed] [char](1) NULL,
	[CtrBatchNo] [decimal](16, 0) NULL,
	[RefSysTraNo] [decimal](16, 0) NULL,
	[UCIF_ID] [varchar](50) NULL,
	[REF_CHQ_NO] [varchar](30) NULL,
	[TxnValueDate_Source] [date] NULL
) ON [PRIMARY]


	   INSERT INTO  #TempAcDailyTxnDetail
   (
  
 CUSTOMERID
,CUSTOMERACID
,TXNDATE
,TXNTYPE
,TXNSUBTYPE
,TXNTIME
,CURRENCYALT_KEY
,CURRENCYCONVRATE
,TXNAMOUNT
,TXNAMOUNTINCURRENCY
,EXTDATE
,TXNREFNO
,TXNVALUEDATE
,MNEMONICCODE
,PARTICULAR
,AUTHORISATIONSTATUS
,CREATEDBY
,DATECREATED
,MODIFIEDBY
,DATEMODIFIED
,APPROVEDBY
,DATEAPPROVED
,REMARK
,TRUECREDIT
,ISPROCESSED
,CTRBATCHNO
,REFSYSTRANO
,UCIF_ID
,REF_CHQ_NO
,TxnValueDate_Source

   )
SELECT
CUSTOMERID='0'
,CUSTOMERACID=COD_ACCT_NO
,TXNDATE=DAT_POST
,TXNTYPE=CASE WHEN COD_DRCR='C' THEN 'CREDIT'  WHEN COD_DRCR='D' THEN 'DEBIT' ELSE NULL END 
,TXNSUBTYPE=CASE WHEN COD_DRCR='C' THEN 'RECOVERY'  WHEN COD_DRCR='D' AND ISNULL(B.ISINTEREST,'N')='I'  THEN 'INTEREST' ELSE 'OTHER INTEREST' END 
,TXNTIME=NULL
,CURRENCYALT_KEY=0
,CURRENCYCONVRATE=rat_conv_TCLCY
,TXNAMOUNT=AMT_TXN
,TXNAMOUNTINCURRENC=amt_txn_tcy
,EXTDATE=@PROCESSDATE
,TXNREFNO=TXN_ID
,TXNVALUEDATE= CASE WHEN COD_TXN_MNEMONIC IN ('6501','9501') THEN  DAT_VALUE ELSE DAT_POST END 
,MNEMONICCODE=COD_TXN_MNEMONIC
,PARTICULAR=TXT_TXN_DESC
,AUTHORISATIONSTATUS=NULL
,CREATEDBY='SSIS'
,DATECREATED=GETDATE()
,MODIFIEDBY=NULL
,DATEMODIFIED=NULL
,APPROVEDBY=NULL
,DATEAPPROVED=NULL
,REMARK=NULL
,CASE WHEN COD_DRCR='C' THEN 'Y' ELSE 'N' END  ---TRUECREDIT='Y'   
,ISPROCESSED='Y'
,CTR_BATCH_NO
,REF_SYS_TR_AUD_NO
,UCIF_ID='0'
,REF_CHQ_NO
,DAT_VALUE
FROM  
YBL_ACS_MIS.DBO.ODS_FCR_CH_NOBOOK_CURR A INNER  JOIN DIMMNEMONICCODE B ON A.COD_TXN_MNEMONIC=B.MNEMONICCODE
 AND B.EFFECTIVEFROMTIMEKEY<=@TIMEKEY AND B.EFFECTIVETOTIMEKEY>=@TIMEKEY
WHERE ISNULL(AMT_TXN,0.00)>0


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='Insert Data Into Temp ACDAILYTXNDETAIL'

---change logic as per discussion on 06/02/2020 some code missing triloki khanna reference of code 1854---

--INSERT INTO  CURDAT.ACDAILYTXNDETAIL
--   (
-- CUSTOMERID
--,CUSTOMERACID
--,TXNDATE
--,TXNTYPE
--,TXNSUBTYPE
--,TXNTIME
--,CURRENCYALT_KEY
--,CURRENCYCONVRATE
--,TXNAMOUNT
--,TXNAMOUNTINCURRENCY
--,EXTDATE
--,TXNREFNO
--,TXNVALUEDATE
--,MNEMONICCODE
--,PARTICULAR
--,AUTHORISATIONSTATUS
--,CREATEDBY
--,DATECREATED
--,MODIFIEDBY
--,DATEMODIFIED
--,APPROVEDBY
--,DATEAPPROVED
--,REMARK
--,TRUECREDIT
--,ISPROCESSED
--,CTRBATCHNO
--,REFSYSTRANO
--,UCIF_ID
--   )
--SELECT
--CUSTOMERID='0'
--,CUSTOMERACID=COD_ACCT_NO
--,TXNDATE=DAT_POST
--,TXNTYPE=CASE WHEN COD_DRCR='C' THEN 'CREDIT'  WHEN COD_DRCR='D' THEN 'DEBIT' ELSE NULL END 
--,TXNSUBTYPE=CASE WHEN COD_DRCR='C' THEN 'RECOVERY'  WHEN COD_DRCR='D' AND ISNULL(C.ISINTEREST,'N')='I'  THEN 'INTEREST' ELSE 'OTHER INTEREST' END 
--,TXNTIME=NULL
--,CURRENCYALT_KEY=0
--,CURRENCYCONVRATE=rat_conv_TCLCY
--,TXNAMOUNT=AMT_TXN
--,TXNAMOUNTINCURRENC=amt_txn_tcy
--,EXTDATE=@PROCESSDATE
--,TXNREFNO=TXN_ID
--,TXNVALUEDATE=CASE WHEN C.MnemonicCode IN ('6501','9501') THEN  DAT_VALUE ELSE DAT_POST END 
--,MNEMONICCODE=C.MnemonicCode
--,PARTICULAR=TXT_TXN_DESC
--,AUTHORISATIONSTATUS=NULL
--,CREATEDBY='SSIS'
--,DATECREATED=GETDATE()
--,MODIFIEDBY=NULL
--,DATEMODIFIED=NULL
--,APPROVEDBY=NULL
--,DATEAPPROVED=NULL
--,REMARK=NULL
--,CASE WHEN COD_DRCR='C' THEN 'Y' ELSE 'N' END  ---TRUECREDIT='Y'   
--,ISPROCESSED='Y'
--,CTR_BATCH_NO
--,REF_SYS_TR_AUD_NO
--,UCIF_ID='0'
--FROM  
--YBL_ACS_MIS.DBO.ODS_FCR_CH_NOBOOK_CURR A INNER  JOIN #TempTableCod_txn_mnemonic B ON A.COD_TXN_MNEMONIC=B.Cod_txn_mnemonic
--INNER JOIN DIMMNEMONICCODE C ON C.MnemonicCode=B.NEW_TXN_CODE
-- AND C.EFFECTIVEFROMTIMEKEY<=@TIMEKEY AND C.EFFECTIVETOTIMEKEY>=@TIMEKEY
--WHERE ISNULL(AMT_TXN,0.00)>0

---change logic as per discussion on 06/02/2020 some code missing triloki khanna reference of code 1854---

--UPDATE A SET A.CUSTOMERID=B.CUSTOMERID FROM CURDAT.ACDAILYTXNDETAIL A INNER  JOIN
--(SELECT FCR_CUSTOMERID CUSTOMERID,ACCOUNTID
-- FROM YBL_ACS_MIS..ACCOUNTDATA
-- GROUP BY FCR_CUSTOMERID , ACCOUNTID
-- ) B ON A.CUSTOMERACID=B.ACCOUNTID
-- WHERE  A.CUSTOMERID='0' AND EXTDATE=@PROCESSDATE


 INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'Customer id Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


 IF OBJECT_ID('TEMPDB..#TempCustomerUpdate') is not  null 
		   DROP TABLE #TempCustomerUpdate

SELECT Cod_cust CUSTOMERID,Cod_acct_no CUSTOMERACID
INTO #TempCustomerUpdate
 FROM YBL_ACS_MIS..ODS_FCR_CH_ACCT_MAST
 GROUP BY Cod_cust , Cod_acct_no
   
UPDATE A SET A.CUSTOMERID=B.CUSTOMERID
 from  #TempAcDailyTxnDetail A INNER  JOIN #TempCustomerUpdate B
  ON A.CUSTOMERACID=B.CUSTOMERACID
   WHERE  A.CUSTOMERID='0' AND EXTDATE=@PROCESSDATE


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='Customer id Updation on AcDailyTxnDetail'

     ------Change done on 12-06-2020 as in some cases UCIF not updated properaly----------
    ----Old logic----------


 --  UPDATE A SET A.UCIF_ID=B.UCIC_ID
 --from  CURDAT.ACDAILYTXNDETAIL A INNER  JOIN YBL_ACS_MIS..CustomerData B
 -- ON A.CUSTOMERID=B.FCR_CUSTOMERID
 --  WHERE  A.UCIF_ID='0' AND EXTDATE=@PROCESSDATE

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'UCIF_ID Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


  ----new logic-----
UPDATE A SET  A.UCIF_ID=B.UCIC_ID
from #TempAcDailyTxnDetail A
	INNER JOIN YBL_ACS_MIS..CustomerData (NOLOCK) B
	ON A.CUSTOMERID=B.FCR_CUSTOMERID
		WHERE (A.UCIF_ID IS NULL OR A.UCIF_ID='0' OR A.UCIF_ID='') 
			and b.UCIc_ID is not null and SourceSystemName='FCR' AND EXTDATE=@PROCESSDATE


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='UCIF_ID Updation on AcDailyTxnDetail'

------Change done on 12-06-2020 as in some cases UCIF not updated properaly----------

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'UCIF_ID ZERO Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


   UPDATE #TempAcDailyTxnDetail SET UCIF_ID=0 WHERE  UCIF_ID  IS NULL AND  EXTDATE=@PROCESSDATE

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='UCIF_ID ZERO Updation on AcDailyTxnDetail'

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'CURRENCYALT_KEY Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID



UPDATE A SET A.CURRENCYALT_KEY=ISNULL(C.CURRENCYALT_KEY,62) FROM #TempAcDailyTxnDetail A 
INNER  JOIN YBL_ACS_MIS..ACCOUNTDATA B ON A.CUSTOMERACID=B.ACCOUNTID
INNER JOIN DIMCURRENCY C ON C.CURRENCYCODE=B.CURRENCYCODE
AND (C.EFFECTIVEFROMTIMEKEY<=@TIMEKEY AND C.EFFECTIVETOTIMEKEY>=@TIMEKEY)
WHERE  EXTDATE=@PROCESSDATE AND A.CURRENCYALT_KEY=0


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='CURRENCYALT_KEY Updation on AcDailyTxnDetail'

/*---TRUE CREDIT MARKING FOR ACDAILYTXNDETAIL----------------------------*/
/*------INWARDCHEQUE RETURNS(9101)/OUTWARD CHEQUE RETURNS(9501)------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'INWARDCHEQUE RETURNS(9101)/OUTWARD CHEQUE RETURNS(9501) Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N' FROM  #TempAcDailyTxnDetail  a
WHERE A.MNEMONICCODE  IN('9101','9501')  AND EXTDATE=@PROCESSDATE 
AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='INWARDCHEQUE RETURNS(9101)/OUTWARD CHEQUE RETURNS(9501) Updation on AcDailyTxnDetail'

/*------------------------DISBURSEMENTS (FCC & FCR)----------------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'DISBURSEMENTS (FCC & FCR)Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID

IF OBJECT_ID('TEMPDB..#COD_TXN_MNEMONIC') IS NOT NULL
   DROP TABLE #COD_TXN_MNEMONIC


SELECT A.COD_TXN_MNEMONIC,TXT_TXN_NARRATIVE, C.COD_ACCT_NO
	INTO #COD_TXN_MNEMONIC
FROM YBL_ACS_MIS.DBO.ODS_FCR_CH_NOBOOK_CURR A 
	 INNER JOIN YBL_ACS_MIS.DBO.ODS_FCR_FFI_STAN_XREF_MMDD C
					ON A.COD_ACCT_NO = C.COD_ACCT_NO
					AND A.CTR_BATCH_NO = C.CTR_BATCH_NO
					AND A.REF_SYS_TR_AUD_NO = C.STAN_NO_FC
					--AND C.TXT_TXN_NARRATIVE  LIKE '%ADJ-ENT%'
					AND A.DAT_VALUE = C.DAT_VALUE       
					AND C.COD_FCC_MODULE = 'CL'
					AND C.COD_TXN_MNEMONIC = '1408'
		WHERE A.COD_TXN_MNEMONIC = '1408'



--UPDATE A SET A.TRUECREDIT='N' FROM CURDAT.ACDAILYTXNDETAIL A 
--WHERE  EXTDATE=@PROCESSDATE AND  A.MNEMONICCODE  IN(
--    --SELECT COD_TXN_MNEMONIC FROM YBL_ACS_MIS.DBO.ODS_FCR_NOBOOK_TXNS_UCIC_FIN A  WHERE COD_TXN_MNEMONIC = '1408'
--	SELECT COD_TXN_MNEMONIC FROM YBL_ACS_MIS.DBO.ODS_FCR_CH_NOBOOK_CURR A  WHERE COD_TXN_MNEMONIC = '1408'
--    AND EXISTS (SELECT 1
--          FROM YBL_ACS_MIS.DBO.ODS_FCR_FFI_STAN_XREF_MMDD C
--          WHERE A.COD_ACCT_NO = C.COD_ACCT_NO
--           AND A.CTR_BATCH_NO = C.CTR_BATCH_NO
--           AND A.REF_SYS_TR_AUD_NO = C.STAN_NO_FC
--           AND C.TXT_TXN_NARRATIVE NOT LIKE '%ADJ-ENT%'
--           AND A.DAT_VALUE = C.DAT_VALUE       
--           AND C.COD_FCC_MODULE = 'CL'
--          AND C.COD_TXN_MNEMONIC = '1408')) AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE A SET A.TRUECREDIT='N' FROM #TempAcDailyTxnDetail A 
		INNER JOIN #COD_TXN_MNEMONIC B
			ON A.CustomerAcID=B.COD_ACCT_NO
			AND A.MNEMONICCODE =B.Cod_txn_mnemonic
			AND TXT_TXN_NARRATIVE NOT LIKE '%ADJ-ENT%'
		WHERE  EXTDATE=@PROCESSDATE
			AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='DISBURSEMENTS (FCC & FCR)Updation on AcDailyTxnDetail'

/*-------------------LOAN ADJUSTMENTS--------------------------------*/
--UPDATE A SET A.TRUECREDIT='N' FROM CURDAT.ACDAILYTXNDETAIL A 
--WHERE  EXTDATE=@PROCESSDATE AND A.MNEMONICCODE  IN(
--													SELECT COD_TXN_MNEMONIC FROM YBL_ACS_MIS.DBO.ODS_FCR_CH_NOBOOK_CURR A  WHERE COD_TXN_MNEMONIC = '1408'
--													 AND EXISTS (SELECT 1
--																	  FROM YBL_ACS_MIS.DBO.ODS_FCR_FFI_STAN_XREF_MMDD C
--																	  WHERE A.COD_ACCT_NO = C.COD_ACCT_NO
--																	   AND A.CTR_BATCH_NO = C.CTR_BATCH_NO
--																	   AND A.REF_SYS_TR_AUD_NO = C.STAN_NO_FC
--																	   AND C.TXT_TXN_NARRATIVE  LIKE '%ADJ-ENT%'
--																	   AND A.DAT_VALUE = C.DAT_VALUE       
--																	   AND C.COD_FCC_MODULE = 'CL'
--																	  AND C.COD_TXN_MNEMONIC = '1408'
--																	)
--													  ) AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

 INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'LOAN ADJUSTMENTS Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N' FROM #TempAcDailyTxnDetail A 
		INNER JOIN #COD_TXN_MNEMONIC B
			ON A.CustomerAcID=B.COD_ACCT_NO
			AND A.MNEMONICCODE =B.Cod_txn_mnemonic
			AND TXT_TXN_NARRATIVE LIKE '%ADJ-ENT%'
		WHERE  EXTDATE=@PROCESSDATE
			AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='LOAN ADJUSTMENTS Updation on AcDailyTxnDetail'


/*-------------NEFT RETURN(2557)/RTGS RETURN(2555)/RTGS Flex@Corp FUNDS TRANSFER CR(6931)------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'NEFT RETURN(2557)/RTGS RETURN(2555) Updation on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N'  FROM #TempAcDailyTxnDetail A 
WHERE A.MNEMONICCODE  IN('2557','2555','6909','6931')  AND PARTICULAR LIKE '%RETURN%'
AND A.EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='NEFT RETURN(2557)/RTGS RETURN(2555) Updation on AcDailyTxnDetail'

/*-----TRANSACTION CODE (1702, 2904) AND NARARATION ENDING WITH ACCOUNT OF SAME UCIC-------------------------------*/

--UPDATE A SET A.TRUECREDIT='N' FROM CURDAT.ACDAILYTXNDETAIL A INNER JOIN YBL_ACS_MIS..ACCOUNTDATA B ON A.CUSTOMERACID=B.ACCOUNTID
--INNER JOIN YBL_ACS_MIS..CUSTOMERDATA C ON C.FCR_CUSTOMERID=B.FCR_CUSTOMERID 
--WHERE A.MNEMONICCODE  IN('1702','2904') AND C.UCIC_ID=REPLACE(RIGHT(PARTICULAR,CHARINDEX('-',REVERSE(PARTICULAR))),'-','')
--AND EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'


-----------Changes on 16-08-2019 as query taking too much time ,patch given by D2k vendor

--UPDATE A SET A.TRUECREDIT='N' FROM CURDAT.ACDAILYTXNDETAIL A INNER JOIN YBL_ACS_MIS..ACCOUNTDATA B ON A.CUSTOMERACID=B.ACCOUNTID
--INNER JOIN YBL_ACS_MIS..CUSTOMERDATA C ON C.FCR_CUSTOMERID=B.FCR_CUSTOMERID 
--WHERE A.MNEMONICCODE  IN('1702','1408') AND C.UCIC_ID=REPLACE(RIGHT(PARTICULAR,CHARINDEX('-',REVERSE(PARTICULAR))),'-','')
--AND EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'TRANSACTION CODE (1702, 2904) AND NARARATION ENDING WITH ACCOUNT OF SAME UCIC on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


IF OBJECT_ID('TEMPDB..#ACDAILYTXNDETAIL') IS NOT NULL
  DROP TABLE #ACDAILYTXNDETAIL 

--SELECT A.CUSTOMERACID,A.TRUECREDIT, PARTICULAR,CAST('' AS VARCHAR(500)) UCIC_ID_NEW,Entitykey   INTO #ACDAILYTXNDETAIL
-- FROM CURDAT.ACDAILYTXNDETAIL A
-- WHERE EXTDATE=@PROCESSDATE AND A.MNEMONICCODE  IN('1702','1408')
--  AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY' 
  
--  UPDATE #ACDAILYTXNDETAIL SET  UCIC_ID_NEW=REPLACE(RIGHT(PARTICULAR,CHARINDEX('-',REVERSE(PARTICULAR))),'-','')

-- UPDATE A SET A.TRUECREDIT='N' FROM #ACDAILYTXNDETAIL A
-- INNER JOIN YBL_ACS_MIS..ACCOUNTDATA B ON A.CUSTOMERACID=B.ACCOUNTID
-- INNER JOIN YBL_ACS_MIS..CUSTOMERDATA C ON C.FCR_CUSTOMERID=B.FCR_CUSTOMERID
-- WHERE C.UCIC_ID=UCIC_ID_NEW

 
--  UPDATE A   SET A.TRUECREDIT=B.TRUECREDIT
-- FROM CURDAT.ACDAILYTXNDETAIL A   INNER JOIN #ACDAILYTXNDETAIL B
--   ON A.Entitykey=B.Entitykey
--   where A.EXTDATE=@PROCESSDATE  and B.TrueCredit='N'


SELECT A.CUSTOMERACID,A.TRUECREDIT, PARTICULAR,CAST('' AS VARCHAR(500)) CUSTOMERACID_NEW,CAST('' AS VARCHAR(500)) UCIC_ID_NEW,A.UCIF_ID,Entitykey   INTO #ACDAILYTXNDETAIL
 FROM #TempAcDailyTxnDetail A
 WHERE EXTDATE=@PROCESSDATE AND A.MNEMONICCODE  IN('1702','1408')
  AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY' 
  
  UPDATE #ACDAILYTXNDETAIL SET  CUSTOMERACID_NEW=RIGHT(PARTICULAR,15)

  UPDATE A SET UCIC_ID_NEW=B.Cod_cust   FROM #ACDAILYTXNDETAIL A
  INNER JOIN YBL_ACS_MIS..ODS_FCR_CH_ACCT_MAST B ON A.CUSTOMERACID_NEW=B.Cod_acct_no


 UPDATE A SET A.TRUECREDIT='N' FROM #ACDAILYTXNDETAIL A
 WHERE UCIC_ID_NEW= UCIF_ID
 AND  UCIF_ID IS NOT NULL 

 
  UPDATE A   SET A.TRUECREDIT=B.TRUECREDIT
 FROM #TempAcDailyTxnDetail A   INNER JOIN #ACDAILYTXNDETAIL B
   ON A.Entitykey=B.Entitykey
   where A.EXTDATE=@PROCESSDATE  and B.TrueCredit='N'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='TRANSACTION CODE (1702, 2904) AND NARARATION ENDING WITH ACCOUNT OF SAME UCIC on AcDailyTxnDetail'

/*--------------DD LIQUIDATED/CANCELLED-------------------------------------------------------------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'DD LIQUIDATED/CANCELLED on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N' FROM #TempAcDailyTxnDetail A 
WHERE A.MNEMONICCODE  IN('8312','8310','6504','7793','8311') 
AND EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='DD LIQUIDATED/CANCELLED on AcDailyTxnDetail'

/*----------------SWEEP IN /SWEEP OUT TRANSACTIONS-------------------------------------------------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'SWEEP IN /SWEEP OUT TRANSACTIONS on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N' FROM #TempAcDailyTxnDetail A 
WHERE A.MNEMONICCODE  IN('1704','1703','1705','1706','1753','1754','9910','9911','1322','9826')
AND EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='SWEEP IN /SWEEP OUT TRANSACTIONS on AcDailyTxnDetail'


---Disable condition on 12-06-2020 based on mail dated 10-06-2020 from Bhagyesh Khanvilkar/Kuldeep Razoria mail dated 27-05-2020----
/*-------------Intra Bank------------------------------*/

--UPDATE A SET A.TRUECREDIT='N'  FROM CURDAT.ACDAILYTXNDETAIL A 
--WHERE A.MNEMONICCODE  IN('1854')  AND PARTICULAR LIKE '%OWN ACCOUNT%'
--AND A.EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

/*-------------Bulk Combine Corp Cr------------------------------*/

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'Bulk Combine Corp Cr on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


UPDATE A SET A.TRUECREDIT='N'  FROM #TempAcDailyTxnDetail A 
WHERE A.MNEMONICCODE  IN('6926')  AND PARTICULAR LIKE '%REVERSAL%'
AND A.EXTDATE=@PROCESSDATE AND TXNTYPE='CREDIT'  AND TXNSUBTYPE='RECOVERY'

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='Bulk Combine Corp Cr on AcDailyTxnDetail'



------------------Add code as per mail from supriya 09-Oct-2020 Audit 1.1.2 not be consider credit from ecbf,eifs and ecfs accounts 15-Dec-2020

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'ProductCode in (605,869,891,703,704,705) Not Consider Credit on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID



Update A set TrueCredit ='N'
from  #TempAcDailyTxnDetail A (nolock)  inner join ybl_acs_mis.dbo.accountdata (nolock) B on
A.CustomerAcID=b.AccountID
where  EXTDATE= @PROCESSDATE--'2020-10-07'
and TxnType ='CREDIT' and B.ProductCode in ('605','869','891','703','704','705')


UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='ProductCode in (605,869,891,703,704,705) Not Consider Credit on AcDailyTxnDetail'
-------------------



-------Add code as per mail from  bank not be consider INTEREST from ecbf,eifs and ecfs accounts 12-NOV-2021

INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'ProductCode in (605,869,891,703,704,705) Not Consider Int on AcDailyTxnDetail','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


Update A set TxnSubType='OTHER INTEREST'
from  #TempAcDailyTxnDetail A (nolock)  inner join ybl_acs_mis.dbo.accountdata (nolock) B on
A.CustomerAcID=b.AccountID
where  EXTDATE= @PROCESSDATE
and TxnSubType ='INTEREST' and B.ProductCode in ('605','869','891','703','704','705')

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='ProductCode in (605,869,891,703,704,705) Not Consider Int on AcDailyTxnDetail'

 INSERT INTO PRO.PROCESSMONITOR(USERID,DESCRIPTION,MODE,STARTTIME,ENDTIME,TIMEKEY,SETID)
	SELECT ORIGINAL_LOGIN(),'Insert Data Into Current ACDAILYTXNDETAIL','RUNNING',GETDATE(),NULL,@TIMEKEY,@SETID


 SET @InsertSQL ='INSERT INTO '+ @DerivedTable+ 
 '(
 Entitykey
,CustomerID	
,CustomerAcID
,TxnDate
,TxnType
,TxnSubType
,TxnTime
,CurrencyAlt_Key	
,CurrencyConvRate
,TxnAmount	
,TxnAmountInCurrency	
,ExtDate
,TxnRefNo
,TxnValueDate
,MnemonicCode	
,Particular	
,AuthorisationStatus
,CreatedBy
,DateCreated
,ModifiedBy	
,DateModified
,ApprovedBy	
,DateApproved
,Remark	
,TrueCredit
,IsProcessed
,CtrBatchNo
,RefSysTraNo	
,UCIF_ID	
,REF_CHQ_NO	
,TxnValueDate_Source


 )

 select 
Entitykey
 ,CustomerID	
,CustomerAcID
,TxnDate
,TxnType
,TxnSubType
,TxnTime
,CurrencyAlt_Key	
,CurrencyConvRate
,TxnAmount	
,TxnAmountInCurrency	
,ExtDate
,TxnRefNo
,TxnValueDate
,MnemonicCode	
,Particular	
,AuthorisationStatus
,CreatedBy
,DateCreated
,ModifiedBy	
,DateModified
,ApprovedBy	
,DateApproved
,Remark	
,TrueCredit
,IsProcessed
,CtrBatchNo
,RefSysTraNo	
,UCIF_ID	
,REF_CHQ_NO	
,TxnValueDate_Source
from #TempAcDailyTxnDetail'

EXEC (@InsertSQL)

UPDATE PRO.PROCESSMONITOR SET ENDTIME=GETDATE() ,MODE='COMPLETE' WHERE IDENTITYKEY = (SELECT IDENT_CURRENT('PRO.PROCESSMONITOR'))
 AND  TIMEKEY=@TIMEKEY AND DESCRIPTION='Insert Data Into Current ACDAILYTXNDETAIL'

 INSERT INTO [PRO].[ProcessingTableStatus]
           ([TableName]
           ,[CurrentTimekey]
		   )
     VALUES
           ('ACDAILYTXNDETAIL'
           ,@TIMEKEY
		   )
-------------------

      --DROP TABLE #TempTableCod_txn_mnemonic
	DROP TABLE #COD_TXN_MNEMONIC
	DROP TABLE #TempCustomerUpdate
	DROP TABLE #ACDAILYTXNDETAIL
	DROP TABLE #TempAcDailyTxnDetail

END TRY
BEGIN CATCH
      SELECT 'ERROR MESSAGE :'+ERROR_MESSAGE()+'ERROR PROCEDURE :'+ERROR_PROCEDURE();

	  INSERT INTO PRO.ProcessingStepStatus(ProcessingStepName,Completed,ErrorDescription,ErrorDate)
		values('ProcessingSteps2','N',ERROR_MESSAGE(),GETDATE())
		
END  CATCH
END 







GO