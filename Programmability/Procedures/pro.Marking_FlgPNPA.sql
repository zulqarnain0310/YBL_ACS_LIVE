SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
/*=========================================
 AUTHER : TRILOKI SHANKER KHANNA
 CREATE DATE : 18-11-2017
 MODIFY DATE : 03-09-2019
 DESCRIPTION : MARKING OF FlgPNPA AND DEG REASON 
  EXEC [PRO].[Marking_FlgPNPA] 25435
=============================================*/
CREATE PROCEDURE [pro].[Marking_FlgPNPA]
@TIMEKEY INT
with recompile
AS
BEGIN
   SET NOCOUNT ON
  BEGIN TRY
    
DECLARE @PROCESSDATE DATE= (SELECT DATE FROM SYSDAYMATRIX WHERE TIMEKEY=@TIMEKEY)  
DECLARE @PNPAPROCESSDATE DATE  =(SELECT EOMONTH(DATE) FROM SYSDAYMATRIX WHERE CAST(DATE AS DATE) =@PROCESSDATE)  
DECLARE @PNPA_DAYS INT =DATEDIFF(DAY,@PROCESSDATE,@PNPAPROCESSDATE)  

/*--------------------INTIAL LEVEL FlgPNPA SET N-------------------------------------------- */


UPDATE A SET A.FlgPNPA='N',PNPA_DATE=NULL FROM PRO.AccountCal A   -- Modification DONE 03/09/2019 TRILOKI 




/*---------------UPDATE FlgPNPA FLAG AT ACCOUNT LEVEL----------------------------------------------------*/

UPDATE A SET A.FLGPNPA =(CASE   WHEN  ((A.DPD_INTSERVICE+@PNPA_DAYS)>=REFPERIODINTSERVICE)   THEN 'Y' 
								WHEN  ((A.DPD_NOCREDIT+@PNPA_DAYS)>=REFPERIODNOCREDIT)       THEN 'Y'
								WHEN  ((A.DPD_OVERDUE+@PNPA_DAYS) >=REFPERIODOVERDUE)        THEN 'Y' 
								WHEN  ((A.DPD_STOCKSTMT+@PNPA_DAYS)>=REFPERIODSTKSTATEMENT)  THEN 'Y' 
								WHEN  ((A.DPD_RENEWAL+@PNPA_DAYS)>=REFPERIODREVIEW)          THEN 'Y'
								WHEN  ((A.DPD_Overdrawn+@PNPA_DAYS)>=REFPERIODOVERDRAWN)          THEN 'Y'
							ELSE 'N'  END)
FROM PRO.ACCOUNTCAL A     -- Modification DONE 03/09/2019 TRILOKI 
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (a.FinalAssetClassAlt_Key IN(SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortNameEnum IN('STD') and EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY))
AND (ISNULL(A.Asset_Norm,'NORMAL')<>'ALWYS_STD')
AND ISNULL(A.FLGMOC,'N')<>'Y'
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%'
 ))
) AND (ISNULL(A.Balance,0)>0 OR ISNULL(A.PrincOutStd,0)>0)


-- Modification DONE 03/09/2019 TRILOKI 
IF OBJECT_ID('TEMPDB..#TEMPTABLEKCC') IS NOT NULL
 DROP TABLE #TEMPTABLEKCC
 
SELECT A.AccountEntityID
INTO #TEMPTABLEKCC 
FROM PRO.ACCOUNTCAL A     
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FinalAssetClassAlt_Key IN(SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortNameEnum IN('STD') and EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY))
AND (ISNULL(A.Asset_Norm,'NORMAL')<>'ALWYS_STD')
AND ISNULL(A.FLGMOC,'N')<>'Y'
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%'
 ))
) AND (ISNULL(A.Balance,0)>0 OR ISNULL(A.PrincOutStd,0)>0)


--WithOUT KCC POTENTIAL NPA ACCOUNT CONDITION CHANGES DONE 08092019 TRILOKI---
UPDATE A SET A.FLGPNPA =(CASE   WHEN  ((A.DPD_INTSERVICE+@PNPA_DAYS)>=REFPERIODINTSERVICE)   THEN 'Y' 
								WHEN  ((A.DPD_NOCREDIT+@PNPA_DAYS)>=REFPERIODNOCREDIT)       THEN 'Y'
								WHEN  ((A.DPD_OVERDUE+@PNPA_DAYS) >=REFPERIODOVERDUE)        THEN 'Y' 
								WHEN  ((A.DPD_STOCKSTMT+@PNPA_DAYS)>=REFPERIODSTKSTATEMENT)  THEN 'Y' 
								WHEN  ((A.DPD_RENEWAL+@PNPA_DAYS)>=REFPERIODREVIEW)          THEN 'Y'
								WHEN  ((A.DPD_Overdrawn+@PNPA_DAYS)>=REFPERIODOVERDRAWN)          THEN 'Y'
							ELSE 'N'  END)
FROM PRO.ACCOUNTCAL A     -- Modification DONE 03/09/2019 TRILOKI 
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (a.FinalAssetClassAlt_Key IN(SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortNameEnum IN('STD') and EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY))
AND (ISNULL(A.Asset_Norm,'NORMAL')<>'ALWYS_STD')
AND ISNULL(A.FLGMOC,'N')<>'Y'
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'
AND (ISNULL(A.Balance,0)>0 OR ISNULL(A.PrincOutStd,0)>0)
AND (isnull(A.FLGPNPA,'N')='N')
AND  A.AccountEntityID NOT IN ( SELECT AccountEntityID FROM #TEMPTABLEKCC)

/*----------------------------------HANDLE TO RESTRUCTURE ACCOUNT ----------------------------------*/

--UPDATE A SET A.FlgPNPA='Y',a.PNPA_Reason='Account Restructured after 01-04-2015', A.PNPA_DATE=@PNPAPROCESSDATE
--FROM PRO.AccountCal A INNER JOIN Curdat.AdvAcRestructureDetail B ON A.AccountEntityID=B.AccountEntityId
--AND (B.EffectiveFromTimeKey<=@TIMEKEY AND B.EffectiveToTimeKey>=@TIMEKEY)
--WHERE B.RestructureDt IS NOT NULL AND RestructureDt >= '2015-04-01' and RestructureDt >= DATEADD(YEAR,-1,@PNPAPROCESSDATE) AND ISNULL(FinalAssetClassAlt_Key,1)=1 AND ISNULL(A.Balance,0)>0


/*-------------------------REVERSING DEGRADED ACCOUNT THROUGH NORMAL PROCESS--------------*/
--UPDATE B SET B.FlgPNPA=
--(CASE WHEN ISNULL(SDR_INVOKED,'N')='Y' AND  DATEADD(DAY,@PNPA_DAYS, SDR_REFER_DATE) >DATEADD(MONTH,-18,@PNPAPROCESSDATE) THEN 'N'
--ELSE B.FlgPNPA
-- END)

-- ,b.PNPA_Reason=(CASE WHEN ISNULL(SDR_INVOKED,'N')='Y' AND  DATEADD(DAY,@PNPA_DAYS, SDR_REFER_DATE) >DATEADD(MONTH,-18,@PNPAPROCESSDATE) THEN null
--ELSE b.PNPA_Reason
-- END)

-- ,B.PNPA_DATE=(CASE WHEN ISNULL(SDR_INVOKED,'N')='Y' AND  DATEADD(DAY,@PNPA_DAYS, SDR_REFER_DATE) >DATEADD(MONTH,-18,@PNPAPROCESSDATE) THEN  NULL ELSE B.PNPA_DATE END )

--FROM  Curdat.AdvAcRestructureDetail A INNER JOIN PRO.AccountCal
-- B ON A.AccountEntityId=B.AccountEntityID
-- AND A.EffectiveFromTimeKey<=@TIMEKEY AND A.EffectiveToTimeKey>=@TIMEKEY
-- WHERE  CustomerEntityID  NOT IN(SELECT CustomerEntityID FROM AdvAcProjectDetail WHERE EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY)
-- AND   A.SDR_REFER_DATE IS NOT NULL   AND ISNULL(FinalAssetClassAlt_Key,1)=1 AND ISNULL(B.Balance,0)>0
  

--UPDATE B SET B.FlgPNPA=
--(CASE WHEN ISNULL(S4A_IMPLEMENTAION_FLG,'N')='Y' AND   DATEADD(DAY,@PNPA_DAYS,S4A_REFERENCE_DATE) >DATEADD(DAY,-180,@PNPAPROCESSDATE) THEN 'N'
--    ELSE B.FlgPNPA
-- END)

-- ,b.PNPA_Reason=(CASE WHEN ISNULL(S4A_IMPLEMENTAION_FLG,'N')='Y' AND   DATEADD(DAY,@PNPA_DAYS,S4A_REFERENCE_DATE) >DATEADD(DAY,-180,@PNPAPROCESSDATE) THEN null
--    ELSE b.PNPA_Reason
-- END)

-- ,B.PNPA_DATE=(CASE WHEN ISNULL(S4A_IMPLEMENTAION_FLG,'N')='Y' AND   DATEADD(DAY,@PNPA_DAYS,S4A_REFERENCE_DATE) >DATEADD(DAY,-180,@PNPAPROCESSDATE) THEN NULL ELSE B.PNPA_DATE END)

--FROM   PRO.AccountCaL B
--INNER JOIN AdvAcProjectDetail C ON C.RefAccountEntityId=B.AccountEntityID
--AND  C.EffectiveFromTimeKey<=@TIMEKEY AND C.EffectiveToTimeKey>=@TIMEKEY
--WHERE    S4A_REFERENCE_DATE IS NOT NULL AND  ISNULL(FinalAssetClassAlt_Key,1)=1 AND ISNULL(B.Balance,0)>0


--UPDATE C SET C.FlgPNPA=( CASE WHEN  ISNULL(SDR_INVOKED,'N')='N'  AND ISNULL(S4A_IMPLEMENTAION_FLG,'N')='N' 
--AND  DATEADD(DAY,@PNPA_DAYS,RevisedCompletionDt)>@PNPAPROCESSDATE THEN 'N' ELSE FlgPNPA  END )
--,c.PNPA_Reason=
--( CASE WHEN  ISNULL(SDR_INVOKED,'N')='N'  AND ISNULL(S4A_IMPLEMENTAION_FLG,'N')='N' 
--AND  DATEADD(DAY,@PNPA_DAYS,RevisedCompletionDt)>@PNPAPROCESSDATE THEN null ELSE c.PNPA_Reason  END )

--, C.PNPA_DATE=(CASE WHEN  ISNULL(SDR_INVOKED,'N')='N'  AND ISNULL(S4A_IMPLEMENTAION_FLG,'N')='N' 
--AND  DATEADD(DAY,@PNPA_DAYS,RevisedCompletionDt)>@PNPAPROCESSDATE THEN null ELSE PNPA_DATE END )

-- FROM Curdat.AdvAcRestructureDetail A INNER JOIN AdvAcProjectDetail B ON A.AccountEntityId=B.RefAccountEntityId
-- AND (A.EffectiveFromTimeKey<=@TIMEKEY AND A.EffectiveToTimeKey>=@TIMEKEY)
-- AND (B.EffectiveFromTimeKey<=@TIMEKEY AND B.EffectiveToTimeKey>=@TIMEKEY)
-- INNER JOIN PRO.AccountCal C ON  C.AccountEntityID=A.AccountEntityId
-- WHERE    B.RevisedCompletionDt IS NOT NULL AND  ISNULL(FinalAssetClassAlt_Key,1)=1 AND ISNULL(C.Balance,0)>0


 /*-------------------------ASSIGNE NPA REASON-------------------------------------------------*/

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+',DEGRADE BY INT NOT SERVICED' 
             ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_INTSERVICE+@PNPA_DAYS-A.REFPERIODINTSERVICE),@PNPAPROCESSDATE)
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID  -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DIMPRODUCT C ON C.PRODUCTALT_KEY=A.PRODUCTALT_KEY AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_INTSERVICE+@PNPA_DAYS)>=A.REFPERIODINTSERVICE)) 
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%')))

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY CONTI EXCESS'
           ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDRAWN+@PNPA_DAYS-A.REFPERIODOVERDRAWN),@PNPAPROCESSDATE)
FROM PRO.AccountCal A-- INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_OVERDRAWN+@PNPA_DAYS)>=A.REFPERIODOVERDRAWN)) 
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%')))

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY OVERDUE'    
      ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDUE +@PNPA_DAYS-A.REFPERIODOVERDUE ),@PNPAPROCESSDATE)          
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_OVERDUE +@PNPA_DAYS)>=A.REFPERIODOVERDUE))  
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%' )))

UPDATE A SET A.PNPA_Reason= 'DEGRADE BY DEBIT BALANCE'    
      ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDUE +@PNPA_DAYS-A.REFPERIODOVERDUE ),@PNPAPROCESSDATE)          
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_OVERDUE +@PNPA_DAYS)>=A.REFPERIODOVERDUE))  
AND A.DebitSinceDt IS NOT NULL AND ISNULL(C.SrcSysProductCode,'N')='SAVING'
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%' )))

UPDATE A SET PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY NO CREDIT'   
         ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_NOCREDIT+@PNPA_DAYS-A.REFPERIODNOCREDIT ),@PNPAPROCESSDATE)
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_NOCREDIT+@PNPA_DAYS)>=A.REFPERIODNOCREDIT)
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%' )))

UPDATE A SET PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY STOCK STATEMENT' 
            ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_STOCKSTMT+@PNPA_DAYS-A.REFPERIODSTKSTATEMENT ),@PNPAPROCESSDATE)   
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_STOCKSTMT+@PNPA_DAYS)>=A.REFPERIODSTKSTATEMENT)  
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%' )))

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY REVIEW DUE DATE'   
,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_RENEWAL+@PNPA_DAYS-A.REFPERIODREVIEW ),@PNPAPROCESSDATE)    
FROM PRO.AccountCal A-- INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_RENEWAL+@PNPA_DAYS)>=A.REFPERIODREVIEW)
AND (ISNULL(C.PRODUCTGROUP,'N')='KCC'
OR ((LineCode LIKE '%CROP_OD_F%' or LineCode LIKE '%CROP_DLOD%' or LineCode LIKE '%CROP_TL_F%'))
OR( (ACCOUNTSTATUS LIKE '%CROP LOAN (OTHER THAN PL%' OR ACCOUNTSTATUS LIKE '%CROP LOAN (PLANT N HORTI%' OR ACCOUNTSTATUS LIKE '%PRE AND POST-HARVEST ACT%'
 OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST HYPOTHEC%' OR ACCOUNTSTATUS LIKE '%FARMERS AGAINST PLEDGE O%' OR ACCOUNTSTATUS LIKE '%PLANTATION/HORTICULTURE%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_OTR THAN PL%'
 OR ACCOUNTSTATUS LIKE '%365_CROP LOAN_PLANT/HORTI%'
 OR ACCOUNTSTATUS LIKE '%365_DEVELOPMENTAL ACTIVI%'
 OR ACCOUNTSTATUS LIKE '%365_LAND DEVELOPMENT%'
 OR ACCOUNTSTATUS LIKE '%365_PLANTATION/HORTI%' )))

 
UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+',DEGRADE BY INT NOT SERVICED' 
             ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_INTSERVICE+@PNPA_DAYS-A.REFPERIODINTSERVICE),@PNPAPROCESSDATE)
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_INTSERVICE+@PNPA_DAYS)>=A.REFPERIODINTSERVICE)) 
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY CONTI EXCESS'
           ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDRAWN+@PNPA_DAYS-A.REFPERIODOVERDRAWN),@PNPAPROCESSDATE)
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE (A.FlgPNPA='Y' AND ((A.DPD_OVERDRAWN+@PNPA_DAYS)>=A.REFPERIODOVERDRAWN)) 
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY OVERDUE'    
      ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDUE +@PNPA_DAYS-A.REFPERIODOVERDUE ),@PNPAPROCESSDATE)          
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND ((A.DPD_OVERDUE +@PNPA_DAYS)>=A.REFPERIODOVERDUE))  
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'

UPDATE A SET A.PNPA_Reason= 'DEGRADE BY DEBIT BALANCE'    
      ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_OVERDUE +@PNPA_DAYS-A.REFPERIODOVERDUE ),@PNPAPROCESSDATE)          
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE (A.FlgPNPA='Y' AND ((A.DPD_OVERDUE +@PNPA_DAYS)>=A.REFPERIODOVERDUE))  
AND A.DebitSinceDt IS NOT NULL AND ISNULL(C.SrcSysProductCode,'N')='SAVING'
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'

UPDATE A SET PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY NO CREDIT'   
         ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_NOCREDIT+@PNPA_DAYS-A.REFPERIODNOCREDIT ),@PNPAPROCESSDATE)
FROM PRO.AccountCal A --INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE   (A.FlgPNPA='Y' AND (A.DPD_NOCREDIT+@PNPA_DAYS)>=A.REFPERIODNOCREDIT)
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC'

UPDATE A SET PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY STOCK STATEMENT' 
            ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_STOCKSTMT+@PNPA_DAYS-A.REFPERIODSTKSTATEMENT ),@PNPAPROCESSDATE)   
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_STOCKSTMT+@PNPA_DAYS)>=A.REFPERIODSTKSTATEMENT)  
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC' AND ISNULL(A.DPD_RENEWAL,0)=0


UPDATE A SET PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY STOCK STATEMENT' 
            ,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_STOCKSTMT+@PNPA_DAYS-A.REFPERIODSTKSTATEMENT ),@PNPAPROCESSDATE)   
FROM PRO.AccountCal A ---INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_STOCKSTMT+@PNPA_DAYS)>=A.REFPERIODSTKSTATEMENT)  
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC' AND ISNULL(A.DPD_STOCKSTMT,0)>ISNULL(A.DPD_RENEWAL,0)

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY REVIEW DUE DATE'   
,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_RENEWAL+@PNPA_DAYS-A.REFPERIODREVIEW ),@PNPAPROCESSDATE)    
FROM PRO.AccountCal A--- INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_RENEWAL+@PNPA_DAYS)>=A.REFPERIODREVIEW) 
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC' AND ISNULL(A.DPD_STOCKSTMT,0)=0

UPDATE A SET A.PNPA_Reason= ISNULL(A.PNPA_Reason,'')+', DEGRADE BY REVIEW DUE DATE'   
,A.PNPA_DATE=DATEADD(DAY,-(A.DPD_RENEWAL+@PNPA_DAYS-A.REFPERIODREVIEW ),@PNPAPROCESSDATE)    
FROM PRO.AccountCal A--- INNER JOIN PRO.CustomerCal B ON A.CustomerEntityID =B.CustomerEntityID -- Modification DONE 03/09/2019 TRILOKI
INNER JOIN DimProduct C ON  A.ProductAlt_Key=C.ProductAlt_Key AND (C.EffectiveFromTimeKey<=@TimeKey AND C.EffectiveToTimeKey>=@TimeKey)
WHERE  (A.FlgPNPA='Y' AND (A.DPD_RENEWAL+@PNPA_DAYS)>=A.REFPERIODREVIEW) 
AND ISNULL(C.PRODUCTGROUP,'N')<>'KCC' AND ISNULL(A.DPD_RENEWAL,0)> ISNULL(A.DPD_STOCKSTMT,0)



 
 
/*-------------------UPDATE DEG FLAG AT CUSTOMER LEVEL------------------------------------------*/
UPDATE B SET B.FlgPNPA='Y' FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CustomerCal B 
ON A.SOURCESYSTEMCUSTOMERID=B.SOURCESYSTEMCUSTOMERID
WHERE A.FlgPNPA='Y'  

UPDATE B SET B.FlgPNPA='Y' FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CustomerCal B 
ON A.RefCustomerID=B.RefCustomerID
WHERE A.FlgPNPA='Y'

-- ADDED 18/11/2019 AS PER OBSERVATION
--UPDATE A SET A.PNPA_Reason='PERCOLATION BY' + ' ' + C.SOURCEDBNAME + '  ' + + 'CUST ID  '+ A.REFCUSTOMERID
--FROM PRO.ACCOUNTCAL A INNER JOIN PRO.CUSTOMERCAL B ON A.SOURCESYSTEMCUSTOMERID =B.SOURCESYSTEMCUSTOMERID
--	INNER JOIN DIMSOURCEDB  C ON C.SOURCEALT_KEY=B.SOURCEALT_KEY
--	AND (C.EFFECTIVEFROMTIMEKEY<=@TIMEKEY AND C.EFFECTIVETOTIMEKEY>=@TIMEKEY)
--	WHERE (B.FlgPNPA='Y')  AND (A.FlgPNPA='N') AND A.PNPA_REASON IS NULL

	IF OBJECT_ID('TEMPDB..#TEMPPNPAID') IS NOT NULL
  DROP TABLE #TEMPPNPAID

select B.SOURCEDBNAME ,A.RefCustomerID  into #TEMPPNPAID from PRO.ACCOUNTCAL A INNER JOIN DIMSOURCEDB  B ON A.SOURCEALT_KEY=B.SOURCEALT_KEY
inner  JOIN PRO.CUSTOMERCAL C on a.SOURCESYSTEMCUSTOMERID=c.SOURCESYSTEMCUSTOMERID
where (C.FlgPNPA='Y')  AND (A.FlgPNPA='Y')


 UPDATE A SET A.PNPA_Reason='PERCOLATION BY' + ' ' + D.SOURCEDBNAME + '  ' + + 'CUST ID  '+ A.RefCustomerID-- ADDED 18/11/2019 AS PER OBSERVATION
FROM PRO.ACCOUNTCAL A INNER JOIN PRO.CUSTOMERCAL B ON A.SOURCESYSTEMCUSTOMERID =B.SOURCESYSTEMCUSTOMERID
	INNER JOIN DIMSOURCEDB  C ON C.SOURCEALT_KEY=B.SOURCEALT_KEY
	AND (C.EFFECTIVEFROMTIMEKEY<=@TIMEKEY AND C.EFFECTIVETOTIMEKEY>=@TIMEKEY)
	INNER JOIN #TEMPPNPAID D on A.RefCustomerID = d.RefCustomerID
	WHERE (B.FlgPNPA='Y')  AND A.PNPA_REASON IS NULL

	------- ADDED 18/11/2019

IF OBJECT_ID('TEMPDB..#TEMPTABLEPNPA') IS NOT NULL
  DROP TABLE #TEMPTABLEPNPA

SELECT A.SOURCESYSTEMCUSTOMERID,MIN(A.PNPA_DATE) PNPA_DATE   INTO #TEMPTABLEPNPA   FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CUSTOMERCAL B 
ON A.SOURCESYSTEMCUSTOMERID=B.SOURCESYSTEMCUSTOMERID
WHERE B.FLGPNPA='Y' AND (B.FLGPROCESSING='N')
GROUP BY A.SOURCESYSTEMCUSTOMERID

UPDATE A SET A.PNPA_DT=B.PNPA_DATE
FROM PRO.CUSTOMERCAL A INNER JOIN #TEMPTABLEPNPA B ON A.SOURCESYSTEMCUSTOMERID=B.SOURCESYSTEMCUSTOMERID


IF OBJECT_ID('TEMPDB..#TEMPTABLEPNPARefCustomerID') IS NOT NULL
  DROP TABLE #TEMPTABLEPNPARefCustomerID

SELECT A.RefCustomerID,MIN(A.PNPA_DATE) PNPA_DATE   INTO #TEMPTABLEPNPARefCustomerID   FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CUSTOMERCAL B 
ON A.RefCustomerID=B.RefCustomerID
WHERE B.FLGPNPA='Y' AND (B.FLGPROCESSING='N')
GROUP BY A.RefCustomerID

UPDATE A SET A.PNPA_DT=B.PNPA_DATE
FROM PRO.CUSTOMERCAL A INNER JOIN #TEMPTABLEPNPARefCustomerID B ON A.RefCustomerID=B.RefCustomerID

IF OBJECT_ID('TEMPDB..#TEMPTABLEPNPAUCIF_ID') IS NOT NULL
  DROP TABLE #TEMPTABLEPNPAUCIF_ID

SELECT A.UCIF_ID,MIN(A.PNPA_DATE) PNPA_DATE   INTO #TEMPTABLEPNPAUCIF_ID   FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CUSTOMERCAL B 
ON A.UCIF_ID=B.UCIF_ID
WHERE B.FLGPNPA='Y' AND (B.FLGPROCESSING='N')
GROUP BY A.UCIF_ID

UPDATE A SET A.PNPA_DT=B.PNPA_DATE
FROM PRO.CUSTOMERCAL A INNER JOIN #TEMPTABLEPNPAUCIF_ID B ON A.UCIF_ID=B.UCIF_ID

IF OBJECT_ID('TEMPDB..#TemptPERCOLATIONPNPA') is not  null 
DROP TABLE #TemptPERCOLATIONPNPA

select distinct REFCUSTOMERID,MAX(ISNULL(DPD_Max,1)) DPD_Max , cast(NULL as Varchar (130))CustomerAcID
INTO #TemptPERCOLATIONPNPA
from pro.accountcal 
where  DPD_Max>=0  AND FlgPNPA='Y'
group by REFCUSTOMERID

UPDATE A SET A.CustomerAcID=B.CustomerAcID
 FROM #TemptPERCOLATIONPNPA A
INNER JOIN pro.accountcal  B
ON A.REFCUSTOMERID=B.REFCUSTOMERID
AND A.DPD_Max=B.DPD_Max

UPDATE b SET b.PNPA_Reason=B.PNPA_Reason + '  ' + + 'Trigger Account  '+ A.CustomerAcID
 FROM #TemptPERCOLATIONPNPA A
INNER JOIN pro.accountcal  B
ON A.REFCUSTOMERID=B.REFCUSTOMERID
where b.PNPA_Reason like '%PERCOLATION%'


--UPDATE A SET A.PNPA_DATE=B.PNPA_DT FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CUSTOMERCAL B 
--ON A.REFCUSTOMERID=B.REFCUSTOMERID
--WHERE B.FLGPNPA='Y' AND (B.FLGPROCESSING='N')
--AND A.FlgPNPA='Y' 

/*-----------------UPDATE FOR PnpaAssetClassAlt_key--------------------------------------------------*/
UPDATE A SET A.PNPAASSETCLASSALT_KEY=ISNULL(A.FINALASSETCLASSALT_KEY,1) FROM PRO.ACCOUNTCAL A INNER JOIN  PRO.CUSTOMERCAL B 
ON A.SourceSystemCustomerID=B.SourceSystemCustomerID
--WHERE (B.FLGPROCESSING='N')

IF OBJECT_ID('TEMPDB..#CTE_CUSTOMERWISEBALANCEPNPA') IS NOT NULL
   DROP TABLE #CTE_CUSTOMERWISEBALANCEPNPA

SELECT A.REFCUSTOMERID,SUM(ISNULL(A.BALANCE,0)) BALANCE INTO #CTE_CUSTOMERWISEBALANCEPNPA
 FROM PRO.ACCOUNTCAL A INNER JOIN PRO.CUSTOMERCAL B ON A.REFCUSTOMERID=B.REFCUSTOMERID
WHERE    B.SYSASSETCLASSALT_KEY  IN (1) AND B.FLGDEG<>'Y'
 AND (ISNULL(B.FLGPROCESSING,'N')='N')    AND ISNULL(A.FACILITYTYPE,'N')NOT IN('INV','LC','BG')
and B.refcustomerid<>'0' 
GROUP BY A.REFCUSTOMERID

DECLARE @MoveToDB1 DECIMAL(5,2) =(SELECT cast(RefValue/100.00 as decimal(5,2))FROM PRO.refperiod where BusinessRule='MoveToDB1' AND EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY)
DECLARE @MoveToLoss DECIMAL(5,2)=(SELECT cast(RefValue/100.00 as decimal(5,2)) FROM PRO.refperiod where BusinessRule='MoveToLoss' AND EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY)

UPDATE  B SET B.PNPA_Class_Key=
  (CASE WHEN  ISNULL(B.CurntQtrRv,0)< (ISNULL(C.BALANCE,0) *@MoveToLoss) AND D.AssetClassShortName<>'LOS' THEN   (SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortName='LOS' AND EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY)
       WHEN  ISNULL(B.CurntQtrRv,0) <(ISNULL(B.PrvQtrRV,0) *@MoveToDB1) AND (ISNULL(C.BALANCE,0)<= ISNULL(B.CurntQtrRv,0)) THEN   (SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortName='DB1' AND EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY) 
	   ELSE (SELECT AssetClassAlt_Key FROM DimAssetClass WHERE AssetClassShortName='SUB' AND EffectiveFromTimeKey<=@TIMEKEY AND EffectiveToTimeKey>=@TIMEKEY)
   END)
FROM  PRO.AccountCal A INNER JOIN PRO.CustomerCal B ON A.RefCustomerID=B.RefCustomerID
INNER JOIN #CTE_CustomerWiseBalancePNPA C ON C.RefCustomerID=B.RefCustomerID
INNER JOIN DimAssetClass D ON D.AssetClassAlt_Key=B.SysAssetClassAlt_Key AND (D.EffectiveFromTimeKey<=@TIMEKEY AND D.EffectiveToTimeKey>=@TIMEKEY)
WHERE ISNULL(A.Balance,0)>0  and b.FlgPNPA='Y'  AND (ISNULL(B.FlgProcessing,'N')='N')

	UPDATE  A SET A.PNPAASSETCLASSALT_KEY=B.PNPA_CLASS_KEY
	FROM  PRO.ACCOUNTCAL A INNER JOIN PRO.CUSTOMERCAL B ON A.CUSTOMERENTITYID=B.CUSTOMERENTITYID
	WHERE B.FLGPNPA='Y'


	

	UPDATE PRO.ACLRUNNINGPROCESSSTATUS 
	SET COMPLETED='Y',ERRORDATE=NULL,ERRORDESCRIPTION=NULL,COUNT=ISNULL(COUNT,0)+1
	WHERE RUNNINGPROCESSNAME='Marking_FlgPNPA'

	 DROP TABLE #TEMPTABLEPNPA
	 DROP TABLE #CTE_CUSTOMERWISEBALANCEPNPA 
	 DROP TABLE #TEMPTABLEKCC

END TRY
BEGIN  CATCH
	UPDATE PRO.ACLRUNNINGPROCESSSTATUS 
	SET COMPLETED='N',ERRORDATE=GETDATE(),ERRORDESCRIPTION=ERROR_MESSAGE(),COUNT=ISNULL(COUNT,0)+1
	WHERE RUNNINGPROCESSNAME='Marking_FlgPNPA'
END CATCH
SET NOCOUNT OFF
END












GO